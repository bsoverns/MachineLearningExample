// This file was auto-generated by ML.NET Model Builder. 

using SentimentPredictionMLModel_ConsoleApp;
string SentimentLabel = "";
float SentimentLabelAccuracy = -100;

// Create single instance of sample data from first line of dataset for model input
SentimentPredictionMLModel.ModelInput sampleData = new SentimentPredictionMLModel.ModelInput()
{
    Sentence = @"‘Financial illiteracy is an epidemic’: Americans lost an average of over $1,800 to financial errors in 2022 — here are 3 big money mistakes you could be making right now",
};

Console.WriteLine("Using model to make single prediction -- Comparing actual Sentiment with predicted Sentiment from sample data...\n\n");
Console.WriteLine($"Sentence: {sampleData.Sentence}");

var sortedScoresWithLabel = SentimentPredictionMLModel.PredictAllLabels(sampleData);
//Console.WriteLine($"{"Class",-40}{"Score",-20}");
//Console.WriteLine($"{"-----",-40}{"-----",-20}");

foreach (var score in sortedScoresWithLabel)
{
    //Console.WriteLine($"Sentiment: {SentimentLabel} $Value: {SentimentLabelAccuracy}");
    if (SentimentLabel == "")
    {
        SentimentLabel = score.Key;
        SentimentLabelAccuracy = score.Value;
    }
    else if(SentimentLabelAccuracy <= score.Value)
    {
        SentimentLabel = score.Key;
        SentimentLabelAccuracy = score.Value;
    }

    //Console.WriteLine($"Test Sentiment: {SentimentLabel} $Value: {SentimentLabelAccuracy}");
    Console.WriteLine($"{score.Key,-40}{score.Value,-20}");
}

Console.WriteLine($"Final Sentiment: {SentimentLabel}");

Console.WriteLine("=============== End of process, hit any key to finish ===============");
Console.ReadKey();